public class arrayQ {
  private static int storage = 5;
  //boolean flag;
  int arr[] = new int[storage];
  int size = 0;
  int front = -1;
  int rear = 0;

  public void enqueue(int num) {
    System.out.println("--------*--------*--------*--------*--------*--------*");
    System.out.println("Trying to Enqueue " + num + "...");
    isFull();
    if (flag == false){
      front++;
      arr[front] = num;
      System.out.println( num + " is added to queue. \n");
      showQueue();
    } else {
      System.out.println("Failed to Enqueue" + num);  
    }
  }

  public void dequeue() {
    System.out.println("--------*--------*--------*--------*--------*--------*");
    System.out.println("Trying to Dequeue ...");
    if (front >= rear) {
      rear++;
      System.out.println("Dequeueing is done. \n");
      showQueue();
    } else {
      isEmpty();
    }
  }
  
  public void isFull(){
    if(front == storage){
      System.out.println("Queue is full");
      flag = true;
    } else { flag = false;}
  }
  
  public void isEmpty(){
    if(front==0){
      System.out.println("Queue is empty");
      flag = true;
    } else { flag = false;}
  }
  
  public void showQueue() {
    if (front >= rear) {
      System.out.println("Elements in Queue : ");
      for (int i = rear; i <= front; i++) {
        System.out.println(arr[i]);
      }
    }
  }

  public static void main(String[] args) {
    arrayQ simulation = new arrayQ();
    simulation.enqueue(13);
    simulation.enqueue(23);
    simulation.enqueue(2);
    simulation.enqueue(73);
    simulation.enqueue(21);
    simulation.enqueue(21);
    simulation.dequeue();
    simulation.dequeue();
    simulation.dequeue();
    simulation.dequeue();
  }
  
}
